name: Create Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger on tags like v1.0.0, v0.1.0, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases and upload assets
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Verify version matches manifest
        id: verify_version
        run: |
          MANIFEST_VERSION=$(grep '"version":' manifest.json | sed -E 's/.*"version": "([0-9.]+)".*/\1/')
          echo "Tag version: ${{ steps.get_version.outputs.version }}"
          echo "Manifest version: $MANIFEST_VERSION"
          if [ "${{ steps.get_version.outputs.version }}" != "$MANIFEST_VERSION" ]; then
            echo "::error::Tag version (${{ steps.get_version.outputs.version }}) does not match manifest.json version ($MANIFEST_VERSION). Please update manifest.json."
            exit 1
          fi

      - name: Install zip for packaging
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Package extension
        run: |
          zip -r "gemini-ui-enhancer-${{ steps.get_version.outputs.version }}.zip" . \
            -x '.git/*' \
            -x 'website/*' \
            -x 'node_modules/*' \
            -x '*.zip' \
            -x 'README.md' \
            -x '.gitignore' \
            -x 'package.json' \
            -x 'yarn.lock' \
            -x '.github/*' \
            -x '__MACOSX/*'

      - name: Create GitHub Release and Upload Assets
        uses: ncipollo/release-action@v1
        with:
          artifacts: "gemini-ui-enhancer-${{ steps.get_version.outputs.version }}.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }} # Or steps.get_version.outputs.version if you want without 'v'
          name: Release ${{ github.ref_name }} # Or Release ${{ steps.get_version.outputs.version }}
          body: "Automated release for GeminiUI Enhancer version ${{ steps.get_version.outputs.version }}. SHA ${{ github.sha }}"
          draft: false
          prerelease: ${{startsWith(github.ref_name, 'v0.')}}

      - name: Upload to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: 'publish'  # one of: upload, publish, testers
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          refresh_token: ${{ secrets.REFRESH_TOKEN }}
          extension_id: '32-CHAR EXTENSION ID' 
          zip_file: 'gemini-ui-enhancer-${{ steps.get_version.outputs.version }}.zip'